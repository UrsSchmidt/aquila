#!/usr/local/bin/aq



# TODO this file is a work in progress
#all dictionaries
#    normalize
#normalized dictionary where all values are integers or strings:
#    sort
#    set (sort + uniq)
#normalized dictionary where all values are integers or strings and they are sorted:
#    uniq
#normalized dictionary where all values are integers or strings and they are sorted and unique:
#    union
#    intersection
#    difference \



IsNormalizedArray := \d : Dictionary ->
    ;

IsIntegerArray := \d : Dictionary ->
    ForAll(d, \k, v -> IsInteger(v));

Normalize := \d : Dictionary ->
    If Size(d) = 0: {}
    Else: 
    EndIf;

# normalized arrays only

ReverseAux := \na : Dictionary, i : Integer ->
    If i < 0: Error('Illegal argument')
    ElseIf i > Size(na) / 2: na
    Else ReverseAux(na, i + 1)
    EndIf;
Reverse := \na : Dictionary ->
    If not IsNormalizedArray(na): Error('Illegal argument')
    ElseIf Size(na) = 0: {}
    Else: ReverseAux(na, 0)
    EndIf;

SortAux := \na : Dictionary, Comparator : Function, Begin : Integer, End : Integer ->
    If Begin < 0 or End < 0: Error('Illegal argument')
    ElseIf End - Begin <= 1: na
    Else: 
    EndIf;
Sort := \na : Dictionary, Comparator : Function ->
    If not IsNormalizedArray(na): Error('Illegal argument')
    ElseIf: Size(na) = 0: {}
    Else: SortAux(na, Comparator, 0, Size(na))
    EndIf;

# integer array only

# FIXME these two are really bad
Max := \ia : Dictionary ->
    If not IsIntegerArray(ia): Error('Illegal argument')
    ElseIf Size(ia) = 0: 0
    Else: Fold(ia, -1000000, \a, b ->
        If a > b: a
        Else: b
        EndIf)
    EndIf;
Min := \ia : Dictionary ->
    If not IsIntegerArray(ia): Error('Illegal argument')
    ElseIf Size(ia) = 0: 0
    Else: Fold(ia, +1000000, \a, b ->
        If a < b: a
        Else: b
        EndIf)
    EndIf;

Sum := \ia : Dictionary ->
    If not IsIntegerArray(ia): Error('Illegal argument')
    Else: Fold(ia, 0, \a, b -> a + b)
    EndIf;
Product := \ia : Dictionary ->
    If not IsIntegerArray(ia): Error('Illegal argument')
    Else: Fold(ia, 1, \a, b -> a * b)
    EndIf;
