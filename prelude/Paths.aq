#!/usr/local/bin/aq

# TODO this file is a work in progress

Count := \s : String, t : String ->
    size(split(t, s)) - 1;

AddSlash := \s : String ->
    If s ew '/': s
    Else: s & '/'
    EndIf;
DropSlash := \s : String ->
    If s ew '/': left(s, length(s) - 1)
    Else: s
    EndIf;

Base := \s : String ->
    Let t = DropSlash(s):
        If '/' in t: substring1(t, findright(t, '/', length(t)) + 1)
        Else: t
        EndIf
    EndLet;
Extension := \s : String ->
    If s ew '/': error('Illegal argument')
    ElseIf '.' in s: substring1(s, findright(s, '.', length(s)) + 1)
    Else: ''
    EndIf;
Parent := \s : String ->
    If not s sw '/': error('Illegal argument')
    Else: left(s, findright(DropSlash(s), '/', length(s)) + 1)
    EndIf;

Absolute := \root : String, s : String ->
    If not root sw '/' or not root ew '/': error('Illegal argument')
    ElseIf s sw '/': s
    ElseIf s sw './': Absolute(root, substring1(s, 2))
    ElseIf s sw '../': Absolute(Parent(root), substring1(s, 3))
    Else: root & s
    EndIf;
Relative := \root : String, s : String ->
    If not root sw '/' or not root ew '/': error('Illegal argument')
    ElseIf not s sw '/': s
    ElseIf s sw root: substring1(s, length(root))
    Else:
        Let f = \t : String, u : String ->
                If head(t) eq head(u): 1 + f(tail(t), tail(u))
                Else: 0
                EndIf,
            l = f(root, s):
            repeat('../', Count(substring1(root, l), '/')) & substring1(s, l)
        EndLet
    EndIf;
