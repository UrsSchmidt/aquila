#!/usr/local/bin/aq

run '../prelude/stringfunctions.aq';

str := 'HeLlO, WoRlD! こんにちは！';

# literals
write '';
write str;

# operations
write '' & 'あいう';
write 'あいう' & '';
write 'あいう' & 'えおか';
write bool2str('あいう' eq 'あいう');
write bool2str('あいう' eq 'えおか');
write bool2str('あいう' ne 'あいう');
write bool2str('あいう' ne 'えおか');
write bool2str('あいう' in 'あいうえお');
write bool2str('えおか' in 'あいうえお');
write bool2str('あいうえお' sw 'あいう');
write bool2str('あいうえお' sw 'いうえ');
write bool2str('あいうえお' ew 'うえお');
write bool2str('あいうえお' ew 'いうえ');

# functions
write int2str(length(str));

write int2str(char2ord(str));
write int2str(char2ord(right(str, 1)));

write charat(str, 1);
write substring1(str, 5);
write substring2(str, 1, 6);

write left(str, 5);
write mid(str, 1, 5);
write right(str, 5);

write head(str);
write tail(str);

write int2str(findleft(str, 'He', 0));
write int2str(findleft(str, 'lO', 0));
write int2str(findright(str, 'He', length(str)));
write int2str(findright(str, 'lO', length(str)));

s := '1;2;3';
write s;
p := split(';', s);
write dict2str(p);
t := join(',', p);
write t;

write repeat(' ', 10);
write repeat('あいう', 0);
write repeat('あいう', 3);

write replace('abcde', 'bcd', '_');
write replace('abcde', '.', '_');

# prelude functions
write bool2str(isblank(''));
write bool2str(isblank(str));
write chop('あいう');
write bool2str(containsonly('***', '*'));
write bool2str(containsonly('*+*', '*'));
write strreverse(str);
write space(5);
write tolowercase(str);
write touppercase(str);
write trimleft(' あいう ');
write trimright(' あいう ');
write trim(' あいう ');
call foreachchar('あいう', \c -> (write '>' & c;));
