rewrite the Interpreter in C++ as aquila4c
    make sure that there is a `delete` for every `new`
    make sure there is a `mpz_clear` for every `mpz_init`
    remove tests/example.aq
    rewrite the bashscripts used in aquila4c as Makefiles
    look for occurrences of anyEquals and toString in aquila4c and decide whether to reduce or expand the amount of occurrences

fix all TODOs/FIXMEs

use checkstyle for aquila4j
use cpplint & cppcheck for aquila4c

predefined functions:
    on strings:
        implement in Aquila as part of the prelude: matches (regex)
    finish arrayfunctions.aq
    files and directories:
        pwd()
        chdir/cd()
        paths:
            parent('/path/to/file') : String # returns '/path/to/'
            parent('/path/to/dir/') : String # returns '/path/to/'
            base('/path/to/file') : String # returns 'file'
            base('/path/to/dir/') : String # returns 'dir'
            extension('/path/to/file.ext') : String # returns 'ext'
            absolute(root, '../file') : String # return '/absolute/path/to/file'
            relative(root, '/absolute/path/to/file') : String # return '../file'
        operations:
            exists('/path/to/file') : Boolean
            exists('/path/to/dir/') : Boolean
            create('/path/to/file');
            create('/path/to/dir/');
            move('/src/file', '/dst/file');
            move('/src/file', '/dst/dir/'); # comes out as /dst/dir/file
            move('/src/dir/', '/dst/dir/');
            copy('/src/file', '/dst/file');
            copy('/src/file', '/dst/dir/'); # comes out as /dst/dir/file
            copy('/src/dir/', '/dst/dir/');
            delete('/path/to/file');
            delete('/path/to/dir/');
            for each file in directory do ...
        content operations:
            read/write file line-by-line

look at older projects and merge with them

look at other languages for further ideas (python, perl, ruby, groovy, actionscript, vbscript, powershell)
