rewrite the Interpreter in C++ as aquila4c
    make keys Strings (instead of Anys) in aquila4j as well?
    make sure that there is a `delete` for every `new`
    make sure there is a `mpz_clear` for every `mpz_init`
    remove tests/example.aq
    rewrite the bashscripts used in aquila4c as Makefiles
    remove a lot of debug outputs (DEBUG_LOG etc)

fix all TODOs/FIXMEs

predefined functions:
    on strings:
        implement in Aquila as part of the prelude: matches (regex)
    on maps (do these manipulate the map directly or return a new map?)
        normalize([]) # fixes array indices to go from 0..length-1
        reverse([])
        shuffle([])
        sort([])
        on integer valued maps
            max([])
            min([])
            sum([])
            product([])
    files and directories:
        pwd()
        chdir/cd()
        paths:
            parent('/path/to/file') : String # returns '/path/to/'
            parent('/path/to/dir/') : String # returns '/path/to/'
            base('/path/to/file') : String # returns 'file'
            base('/path/to/dir/') : String # returns 'dir'
            extension('/path/to/file.ext') : String # returns 'ext'
            absolute(root, '../file') : String # return '/absolute/path/to/file'
            relative(root, '/absolute/path/to/file') : String # return '../file'
        operations:
            exists('/path/to/file') : Boolean
            exists('/path/to/dir/') : Boolean
            create('/path/to/file');
            create('/path/to/dir/');
            move('/src/file', '/dst/file');
            move('/src/file', '/dst/dir/'); # comes out as /dst/dir/file
            move('/src/dir/', '/dst/dir/');
            copy('/src/file', '/dst/file');
            copy('/src/file', '/dst/dir/'); # comes out as /dst/dir/file
            copy('/src/dir/', '/dst/dir/');
            delete('/path/to/file');
            delete('/path/to/dir/');
            for each file in directory do ...
        content operations:
            read/write file line-by-line

use checkstyle for aquila4j
use cpplint & cppcheck for aquila4c

look at older projects and merge with them

look at other languages for further ideas (python, perl, ruby, groovy, actionscript, vbscript)
