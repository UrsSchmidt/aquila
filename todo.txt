implement functions/procedures!
    there should also be three functions introduced:
        forall(dict, (obj, obj) -> {});
        forallchars(str, (str) -> {});
        foralllines(str, (str) -> {});
    common stream functions: map, fold, filter, remove, etc.

break/continue statements in loops?

predefined functions:
    on integers:
        factorial(n) (or use a! ?)
    on strings:
        indexOf, lastIndexOf
        how?: format, matches, like
    on maps (do these manipulate the map directly or return a new map?)
        normalize([]) # fixes array indices to go from 0..length-1
        reverse([])
        shuffle([])
        sort([])
        on integer valued maps
            max([])
            min([])
            sum([])
            product([])
    files:
        stuff on paths like `basename` etc
        exists('/path/to/file') : Boolean
        exists('/path/to/dir/') : Boolean
        create('/path/to/file');
        create('/path/to/dir/');
        move('/src/file', '/dst/file');
        move('/src/file', '/dst/dir/'); # comes out as /dst/dir/file
        move('/src/dir/', '/dst/dir/');
        copy('/src/file', '/dst/file');
        copy('/src/file', '/dst/dir/'); # comes out as /dst/dir/file
        copy('/src/dir/', '/dst/dir/');
        delete('/path/to/file');
        delete('/path/to/dir/');
        read/write file line-by-line

inline if? select?

look at other languages for further ideas
